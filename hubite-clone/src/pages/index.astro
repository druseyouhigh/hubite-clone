---
// Static generation for home page
export const prerender = true;

import BaseLayout from '../ui/layouts/BaseLayout.astro';
import CreatorsGrid from '../ui/components/CreatorsGrid.astro';
import HeroSection from '../ui/sections/HeroSection.astro';
import BenefitsSection from '../ui/sections/BenefitsSection.astro';
import FAQSection from '../ui/sections/FAQSection.astro';
import { strapiClient } from '../lib/strapi';
import { t, formatNumber } from '../lib/i18n';
import type { Creator, Category, SearchParams } from '../types/strapi';

// Get search parameters from URL
const url = new URL(Astro.request.url);
const searchParams: SearchParams = {
  query: url.searchParams.get('search') || undefined,
  categories: url.searchParams.getAll('category').filter(Boolean),
  sortBy: (url.searchParams.get('sort') as any) || 'relevance',
  page: parseInt(url.searchParams.get('page') || '1'),
  pageSize: 12,
  isFree: url.searchParams.get('free') === 'true' ? true : undefined,
  verified: url.searchParams.get('verified') === 'true' ? true : undefined,
  featured: url.searchParams.get('featured') === 'true' ? true : undefined,
};

// Load data from API
let creators: Creator[] = [];
let categories: Category[] = [];
let totalCreators = 0;
let error: string | null = null;

try {
  // Load creators and categories in parallel
  const [creatorsResponse, categoriesResponse] = await Promise.all([
    strapiClient.getCreators(searchParams),
    strapiClient.getCategories()
  ]);
  
  creators = creatorsResponse.data || [];
  categories = categoriesResponse.data || [];
  totalCreators = creatorsResponse.meta?.pagination?.total || creators.length;
  
  // Debug logging for creators
  console.log(`‚úÖ Homepage data loaded: {
    creators: ${creators.length},
    categories: ${categories.length},
    totalCreators: ${totalCreators},
    searchParams: ${JSON.stringify(searchParams, null, 2)}
  }`);
  
  // Log creator usernames for debugging
  if (creators.length > 0) {
    console.log(`üìã Creator usernames:`, creators.map(c => `${c.name} (${c.username})`));
  }
  
} catch (err) {
  error = `–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: ${err instanceof Error ? err.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'}`;
  console.error('‚ùå Homepage API Error:', err);
}

// SEO and meta data
const pageTitle = searchParams.query 
  ? `–ü–æ—à—É–∫: ${searchParams.query} - Hubite Clone`
  : 'Hubite Clone - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∫—Ä–µ–∞—Ç–æ—Ä—ñ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç—É';

const pageDescription = searchParams.query
  ? `–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –¥–ª—è "${searchParams.query}". –ó–Ω–∞–π–¥–µ–Ω–æ ${totalCreators} –∫—Ä–µ–∞—Ç–æ—Ä—ñ–≤.`
  : `–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–ª—è —Å–µ–±–µ ${totalCreators} —Ç–∞–ª–∞–Ω–æ–≤–∏—Ç–∏—Ö –∫—Ä–µ–∞—Ç–æ—Ä—ñ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç—É. –ï–∫—Å–∫–ª—é–∑–∏–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—ñ, –±–µ–∑–ø–µ—á–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞.`;

const currentPage = searchParams.page || 1;
const hasMorePages = totalCreators > (currentPage * (searchParams.pageSize || 12));
---

<BaseLayout 
  title={pageTitle}
  description={pageDescription}
>
  <!-- Hero Section (—Ç—ñ–ª—å–∫–∏ –Ω–∞ –ø–µ—Ä—à—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –±–µ–∑ –ø–æ—à—É–∫—É) -->
  {!searchParams.query && currentPage === 1 && (
    <HeroSection />
  )}

  <!-- Search Results Header -->
  {searchParams.query && (
    <section class="bg-gray-50 py-12">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-3xl font-bold text-gray-900 sm:text-4xl">
            –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É
          </h1>
          <p class="mt-2 text-lg text-gray-600">
            –ü–æ—à—É–∫ –∑–∞ –∑–∞–ø–∏—Ç–æ–º: <span class="font-semibold">"{searchParams.query}"</span>
          </p>
          {totalCreators > 0 && (
            <p class="mt-1 text-sm text-gray-500">
              –ó–Ω–∞–π–¥–µ–Ω–æ {totalCreators} {totalCreators === 1 ? '–∫—Ä–µ–∞—Ç–æ—Ä' : '–∫—Ä–µ–∞—Ç–æ—Ä—ñ–≤'}
            </p>
          )}
        </div>
      </div>
    </section>
  )}

  <!-- Filters Section -->
  <section class="bg-white border-b border-gray-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <!-- Search Form -->
      <form method="GET" class="mb-6">
        <div class="flex flex-col sm:flex-row gap-4">
          <!-- Search Input -->
          <div class="flex-1">
            <input
              type="text"
              name="search"
              value={searchParams.query || ''}
              placeholder="–ü–æ—à—É–∫ –∫—Ä–µ–∞—Ç–æ—Ä—ñ–≤..."
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-pink-500"
            />
          </div>
          
          <!-- Category Filter -->
          {categories.length > 0 && (
            <div class="sm:w-48">
              <select 
                name="category" 
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-pink-500"
              >
                <option value="">–í—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</option>
                {categories.map(category => (
                  <option 
                    value={category.slug}
                    selected={searchParams.categories?.includes(category.slug)}
                  >
                    {category.icon} {category.name}
                  </option>
                ))}
              </select>
            </div>
          )}
          
          <!-- Sort Filter -->
          <div class="sm:w-40">
            <select 
              name="sort" 
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-pink-500"
            >
              <option value="relevance" selected={searchParams.sortBy === 'relevance'}>–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ—Å—Ç—å</option>
              <option value="recent" selected={searchParams.sortBy === 'recent'}>–ù–æ–≤—ñ</option>
              <option value="popular" selected={searchParams.sortBy === 'popular'}>–ü–æ–ø—É–ª—è—Ä–Ω—ñ</option>
              <option value="price" selected={searchParams.sortBy === 'price'}>–ó–∞ —Ü—ñ–Ω–æ—é</option>
              <option value="name" selected={searchParams.sortBy === 'name'}>–ó–∞ —ñ–º'—è–º</option>
            </select>
          </div>
          
          <!-- Search Button -->
          <button
            type="submit"
            class="px-6 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700 focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 transition-colors"
          >
            –ü–æ—à—É–∫
          </button>
        </div>
        
        <!-- Quick Filters -->
        <div class="flex flex-wrap gap-2 mt-4">
          <label class="inline-flex items-center">
            <input 
              type="checkbox" 
              name="free" 
              value="true"
              checked={searchParams.isFree === true}
              class="rounded border-gray-300 text-pink-600 focus:ring-pink-500"
            />
            <span class="ml-2 text-sm text-gray-700">–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ</span>
          </label>
          
          <label class="inline-flex items-center">
            <input 
              type="checkbox" 
              name="verified" 
              value="true"
              checked={searchParams.verified === true}
              class="rounded border-gray-300 text-pink-600 focus:ring-pink-500"
            />
            <span class="ml-2 text-sm text-gray-700">–í–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ</span>
          </label>
          
          <label class="inline-flex items-center">
            <input 
              type="checkbox" 
              name="featured" 
              value="true"
              checked={searchParams.featured === true}
              class="rounded border-gray-300 text-pink-600 focus:ring-pink-500"
            />
            <span class="ml-2 text-sm text-gray-700">–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ</span>
          </label>
        </div>
      </form>
    </div>
  </section>

  <!-- Main Content -->
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    {error ? (
      <!-- Error State -->
      <div class="text-center py-12">
        <div class="bg-red-50 border border-red-200 rounded-lg p-8 max-w-md mx-auto">
          <svg class="mx-auto h-12 w-12 text-red-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <h3 class="text-lg font-medium text-red-800 mb-2">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
          <p class="text-red-600 mb-4">{error}</p>
          <button 
            onclick="window.location.reload()" 
            class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
          >
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
          </button>
        </div>
      </div>
    ) : (
      <!-- Creators Grid -->
      <CreatorsGrid 
        creators={creators}
        title={searchParams.query ? undefined : "–ü–æ–ø—É–ª—è—Ä–Ω—ñ –∫—Ä–µ–∞—Ç–æ—Ä–∏"}
        showLoadMore={hasMorePages}
        searchParams={searchParams}
      />
    )}
  </main>

  <!-- Benefits Section (—Ç—ñ–ª—å–∫–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ) -->
  {!searchParams.query && currentPage === 1 && !error && (
    <BenefitsSection />
  )}

  <!-- FAQ Section (—Ç—ñ–ª—å–∫–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ) -->
  {!searchParams.query && currentPage === 1 && !error && (
    <FAQSection />
  )}
</BaseLayout>
